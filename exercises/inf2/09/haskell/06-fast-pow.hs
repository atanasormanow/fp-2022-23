-- fastPow е функция, която приема 2 аргументa,
-- първият от които е число, вторият от които - целочислено число,
-- и връща резултат - число
-- fastPow :: (Integral t, Num a) => a -> t -> a
fastPow x n
  | n == 0 = 1
  | even n = (fastPow x (n `div` 2)) ^ 2
  | otherwise = x * (fastPow x (n - 1))

-- в горната имплементация използваме div за целочислено деление
-- защото степента, на която повдигаме, трябва да е цяло число
-- понеже типа на even e even :: Integral a => a -> Bool,
-- т.е. even очаква аргументът му да е цяло число